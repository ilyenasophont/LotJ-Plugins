<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, May 04, 2010, 3:32 PM -->
<!-- MuClient version 4.40 -->

<!-- Plugin "LotJDevelopment" generated by Plugin Wizard -->

<muclient>
<plugin
   name="LotJDevelopment"
   author="@Ilyena"
   id="ccc64ed415951ef5a12640e4"
   language="Lua"
   purpose="A small tool for making development less tedious"
   save_state="y"
   date_written="2010-05-04 15:31:49"
   requires="4.40"
   version="1.0"
   >
<description trim="y">
<![CDATA[
devhelp
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="Development"
   match="You mess up your data. Now you have to start all over again..."
   name="FailedAttempt"
   script="DevelopmentAttempt"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="Development"
   match="You spend hours developing but make no breakthroughs."
   name="NoSuccessDev"
   script="IncreaseIncrement"
   sequence="100"
  >
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   name="ShowDevHelp"
   script="ShowDevelopmentCommands"
   match="devhelp"
   enabled="y"
   group="Development"
   sequence="100"
  >
  </alias>
  <alias
   name="ShowDevInfo"
   script="ShowDevelopmentInformation"
   match="devinfo"
   enabled="y"
   group="Development"
   sequence="100"
  >
  </alias>
  <alias
   name="BeginDevelopment"
   script="DevelopmentAttempt"
   match="devbegin"
   enabled="y"
   group="Development"
   sequence="100"
  >
  </alias>
  <alias
   name="DevAttempts"
   script="SetAttempts"
   match="devtries *"
   enabled="y"
   group="Development"
   sequence="100"
  >
  </alias>
  <alias
   name="DevelopmentScience"
   script="SetScience"
   match="devscience *"
   enabled="y"
   group="Development"
   sequence="100"
  >
  </alias>
  <alias
   name="DevelopmentClear"
   script="ClearDevelopment"
   match="devclear"
   enabled="y"
   group="Development"
   sequence="100"
  >
  </alias>
</aliases>

<!--  Variables  -->

<variables>
  <variable name="totalDevelopmentCost">450000</variable>
  <variable name="developmentArea">data</variable>
  <variable name="developmentAttempts">7</variable>
</variables>

<!--  Script  -->


<script>
<![CDATA[
triesLeft = GetVariable("developmentAttempts")
developmentScience = GetVariable("developmentArea")
totalCost = GetVariable("totalDevelopmentCost")

function ClearDevelopment(name, line, wildcards)
	SetVariable("developmentAttempts", "0")
	triesLeft = GetVariable("developmentAttempts")
	SetVariable("developmentArea", "")
	developmentScience = GetVariable("developmentArea")
	SetVariable("totalDevelopmentCost", "0")
	totalCost = GetVariable("totalDevelopmentCost")
	ColourNote("red", "black", "Development Cleared")
end -- function

function DevelopmentAttempt(name, line, wildcards)
	if(tonumber(triesLeft) > 0) then
		Execute("develop ".. developmentScience)
	else
		ColourNote("red", "black", "Development Attempts Exhausted")
	end -- if
end -- function

function IncreaseIncrement(name, line, wildcards)
	SetVariable("developmentAttempts", GetVariable("developmentAttempts") - 1)
	SetVariable("totalDevelopmentCost", GetVariable("totalDevelopmentCost") + 50000)
	triesLeft = GetVariable("developmentAttempts")
	totalCost = GetVariable("totalDevelopmentCost")
	ColourNote("grey", "black", "Attempts left: ".. triesLeft)
	ColourNote("grey", "black", "Total cost so far: " .. totalCost .. " credits")
	DevelopmentAttempt()
end -- function

function SetAttempts(name, line, wildcards)
	if (wildcards[1] ~= nil) then
		SetVariable("developmentAttempts", wildcards[1])
		triesLeft = GetVariable("developmentAttempts")
		ColourNote("grey", "black", "Attempts set to ".. triesLeft)
	end -- if
end -- function

function SetScience(name, line, wildcards)
	if (wildcards[1] ~= nil) then
		SetVariable("developmentArea", wildcards[1])
		developmentScience = GetVariable("developmentArea")
		ColourNote("grey", "black", "Science Set to ".. developmentScience)
	end -- if
end -- function

function ShowDevelopmentInformation(name, line, wildcards)
	ColourNote("lime", "black", "Attempts Left: ".. triesLeft)
	ColourNote("lime", "black", "Development Science: ".. developmentScience)
	ColourNote("lime", "black", "Cost So Far: ".. totalCost .. " credits")
end -- function

function ShowDevelopmentCommands(name, line, wildcards)
	ColourNote("grey", "black", "*** Development Assistant by @Ilyena ***")
	ColourNote("grey", "black", "'devinfo' - Show Development Information")
	ColourNote("grey", "black", "'devscience #' - Set the area of development")
	ColourNote("grey", "black", "'devtries #' - Set the number of attempts to be made")
	ColourNote("grey", "black", "'devbegin' - Start the development process")
	ColourNote("grey", "black", "'devclear' - Clear the development information")
end -- function

]]>
</script>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="LotJDevelopment:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>
