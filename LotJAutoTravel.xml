<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Monday, April 05, 2010, 4:57 PM -->
<!-- MuClient version 4.40 -->

<!-- Plugin "LotJAutoTravel" generated by Plugin Wizard -->

<muclient>
<plugin
   name="LotJAutoTravel"
   author="@Ilyena"
   id="da1332f4c6efc24cc2f6a045"
   language="Lua"
   purpose="To make travelling easier!"
   save_state="y"
   date_written="2010-04-05 16:55:45"
   requires="4.40"
   version="1.0"
   >
<description trim="y">
<![CDATA[
'travel <planet> <spaceport>' - Travels to the spaceport on the designated planet
'settravel' - Toggles between having the triggers working and not working.
NOTE: If you disable the script halfway-through, you will need to reinitialise it after.
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   group="Autotravel"
   match="You don't seem to be docked right now."
   name="AmILanded"
   script="IAlreadyLaunched"
   sequence="100"
  >
  </trigger>
  <trigger
   group="Autotravel"
   match="Starsystem: *"
   name="StorePlanetSystem"
   regexp="n"
   script="StorePlanetSystem"
   sequence="100"
   lowercase_wildcard="y"
  >
  </trigger>
  <trigger
   group="Autotravel"
   match="^You begin orbiting (.*)\.$"
   name="LandOnPlanet"
   regexp="y"
   script="LandOnPlanet"
   sequence="100"
   lowercase_wildcard="y"
  >
  </trigger>
  <trigger
   group="Autotravel"
   match="Maneuver complete."
   name="PrepareToLand"
   script="PrepareToLand"
   sequence="100"
  >
  </trigger>
  <trigger
   group="Autotravel"
   match="Hyperjump complete."
   name="TravelJumpComplete"
   script="CourseToPlanet"
   sequence="100"
  >
  </trigger>
  <trigger
   group="Autotravel"
   match="You're not going to find anything out without a datapad."
   name="NoDatapad"
   script="DisableTriggers"
   sequence="100"
  >
  </trigger>
  <trigger
   group="Autotravel"
   match="No such planet."
   name="DisableTriggers"
   script="DisableTriggers"
   sequence="100"
  >
  </trigger>
  <trigger
   group="Autotravel"
   match="^Speed\: (.*)$"
   name="ShipHasLaunched"
   regexp="y"
   script="IAlreadyLaunched"
   sequence="100"
  >
  </trigger>
  <trigger
   group="Autotravel"
   match="Use 'SHOWPLANET &lt;planet&gt; RESOURCES' for current resources."
   name="TidyScreen"
   script="TidyScreen"
   sequence="100"
  >
  </trigger>
  <trigger
   group="Autotravel"
   match="You push forward the hyperspeed lever."
   name="DisableHyperspaceTimer"
   script="DisableHyperspaceTimer"
   sequence="100"
  >
  </trigger>
  <trigger
   group="Autotravel"
   match="[Status]: Hyperspace Calculations have been completed."
   name="HyperJumpReady"
   script="EngageHyperdrive"
   sequence="100"
  >
  </trigger>
  <trigger
   group="Autotravel"
   lines_to_match="2"
   match="^Coordinates\: (.*?) (.*?) (.*?)$"
   name="StorePlanetCoordinates"
   regexp="y"
   script="StorePlanetCoordinates"
   sequence="100"
  >
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   name="TravelHelp"
   script="ShowCommands"
   match="travelhelp"
   enabled="y"
   group="Autotravel"
   sequence="100"
  >
  </alias>
  <alias
   name="PerformAutoTravel"
   script="LaunchShip"
   match="^Travel (.*) (.*)$"
   enabled="y"
   group="Autotravel"
   omit_from_log="y"
   regexp="y"
   omit_from_output="y"
   ignore_case="y"
   sequence="100"
  >
  </alias>
  <alias
   name="ToggleAutoTravel"
   script="ToggleTravelEnabled"
   match="settravel"
   enabled="y"
   group="Autotravel"
   ignore_case="y"
   sequence="100"
  >
  </alias>
  <alias
   match="launch"
   enabled="y"
   group="Autotravel"
   sequence="100"
  >
  <send>launch confirm</send>
  </alias>
</aliases>

<!--  Timers  -->

<timers>
  <timer name="EngageHyperdrive" second="30.00" offset_second="0.00" group="Autotravel" >
  <send>hyperspace</send>

  </timer>
</timers>

<!--  Script  -->


<script>
<![CDATA[
planetCoordinates = {}
planetSystem = "nil"
planetName = "nil"
spaceport = "nil"
systemFound = false
coordinatesFound = false
readyToTravel = false
autoTravelEnabled = true

function StorePlanetCoordinates(name, line, wildcards)
	if (autoTravelEnabled == true) then
		planetCoordinates[1] = wildcards[1]
		planetCoordinates[2] = wildcards[2]
		planetCoordinates[3] = wildcards[3]
		DeleteLines(7)
		Note("Coordinates Found!")
		if (planetCoordinates[1] ~= nil) and (planetCoordinates[2] ~= nil) and (planetCoordinates[3] ~= nil) then
			coordinatesFound = true
			planetCoordinates[1] = planetCoordinates[1] - 500
			planetCoordinates[2] = planetCoordinates[2]
			planetCoordinates[3] = planetCoordinates[3]
		end -- if
		EnableTrigger(name, false)
		if (systemFound == true) and (coordinatesFound == true) then
			readyToTravel = true
			CalculateDestination()
		end -- if
	else
		--EnableTrigger(name, false)
	end -- if
end -- function

function CalculateDestination(name, line, wildcards)
	if (autoTravelEnabled == true) then
		EnableTrigger("NoDatapad", false) -- No Longer Needed
		EnableTrigger("DisableTriggers", false) -- No Longer Needed
		if (readyToTravel == true) then
			Send("calculate \"" .. planetSystem .. "\" " .. planetCoordinates[1] .. " " .. planetCoordinates[2] .. " " .. planetCoordinates[3])
			EnableTrigger("HyperJumpReady", true)
			EnableTrigger("DisableHyperspaceTimer", true)
		end -- if
	else -- If the script is turned off.
		--EnableTrigger("NoDatapad", false) -- No Longer Needed
		--EnableTrigger("DisableTriggers", false) -- No Longer Needed
	end -- if
end -- function

function ResetVariables(name, line, wildcards)
	EnableTrigger(name, false)
	
end -- if

function LaunchShip(name, line, wildcards)
	if (autoTravelEnabled == true) then
		-- Activate the trigger listening for if you're already in space.
		EnableTrigger("AmILanded", true)
		EnableTrigger("ShipHasLaunched", true)
		Send("autopilot off")
		Send("launch confirm")
		planetName = wildcards[1]
		if (wildcards[2] ~= nil) then
			spaceport = wildcards[2]
		else
			spaceport = "unspecified spaceport"
		end -- if
		ColourNote("green", "", "Travelling to ".. spaceport .. " spaceport on ".. planetName)
	else
		ColourNote("red", "", "AutoTravel is Currently Disabled!")
	end -- if
end -- function

function IAlreadyLaunched(name, line, wildcards)
	if (autoTravelEnabled == true) then
		PerformAutoTravel()
		EnableTrigger("ShipHasLaunched", false)
		EnableTrigger("AmILanded", false)
	end -- if
end -- function

function EngageHyperdrive(name, line, wildcards)
	if (autoTravelEnabled == true) then
		EnableTimer("EngageHyperdrive", true)
		Send("hyperspace")
		EnableTrigger("HyperJumpReady", false)
		EnableTrigger("TravelJumpComplete", true)
	else -- If the script is turned off.
		--EnableTrigger("HyperJumpReady", false)
	end -- if
end -- function

function DisableHyperspaceTimer(name, line, wildcards)
	EnableTimer("EngageHyperdrive", false)
	EnableTrigger("DisableHyperspaceTimer", false)
end -- function

function CourseToPlanet(name, line, wildcards)
	if (autoTravelEnabled == true) then
		EnableTrigger("TravelJumpComplete", false)
		Send("speed 100")
		Send("course \"" .. planetName .. "\"")
		EnableTrigger("PrepareToLand", true)
	else
		--EnableTrigger("TravelJumpComplete", false)
	end -- if
end -- function

function LandOnPlanet(name, line, wildcards)
	if (autoTravelEnabled == true) then
		if (string.lower(wildcards[1]) == string.lower(planetName)) and (spaceport ~= nil) then
			Send("land \"".. planetName .. "\" " .. spaceport)
			Send("shields on")
			Send("autopilot on")
		else
			ColourNote("yellow", "", "Ready For Manual Landing on " .. planetname .. "!")
		end -- if
		EnableTrigger(name, false)
	end -- if
end -- function

function PrepareToLand(name, line, wildcards)
	if (autoTravelEnabled == true) then
		EnableTrigger(name, false)
		EnableTrigger("LandOnPlanet", true)
	end -- if
end -- function

function StorePlanetSystem(name, line, wildcards)
	if (autoTravelEnabled == true) then
		planetSystem = wildcards[1]
		DeleteLines(5)
		Note("Starsystem Found!")
		systemFound = true
		EnableTrigger(name, false)
	else
		--EnableTrigger(name, false)
	end -- if
end -- function

function DisableTriggers(name, line, wildcards) -- Incase something goes wrong.
	EnableTrigger("TidyScreen", false)
	EnableTrigger("StorePlanetCoordinates", false)
	EnableTrigger("StorePlanetSystem", false)
	EnableTrigger("NoDatapad", false)
	EnableTrigger("DisableTriggers", false)
end -- function

function PerformAutoTravel(name, line, wildcards)
	if (autoTravelEnabled == true) then
		EnableTrigger("StorePlanetCoordinates", true)
		EnableTrigger("StorePlanetSystem", true)
		EnableTrigger("TidyScreen", true)
		EnableTrigger("NoDatapad", true)
		EnableTrigger("DisableTriggers", true)
		Send("showplanet '" .. planetName .. "'")
	else
		ColourNote("red", "", "AutoTravel is Currently Disabled!")
	end -- if
end -- function

function ShowCommands(name, line, wildcards)
	Note("'travel <planet> <spaceport>' - Travels to the spaceport on the designated planet")
	Note("'settravel' - Toggles between having the triggers working and not working.")
	Note("NOTE: If you disable the script halfway-through, you will need to reinitialise it after.")
end -- function

function TidyScreen(name, line, wildcards)
	if (autoTravelEnabled == true) then
		DeleteLines(9)
		EnableTrigger(name, false)
	else
		--EnableTrigger(name, false)
	end -- if
end -- function

function ToggleTravelEnabled(name, line, wildcards)
	if (autoTravelEnabled == true) then
		autoTravelEnabled = false
		ColourNote("red", "", "AutoTravel Disabled")
	else
		autoTravelEnabled = true
		ColourNote("green", "", "AutoTravel Enabled")
	end -- if
end -- function

]]>
</script>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="LotJAutoTravel:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>
