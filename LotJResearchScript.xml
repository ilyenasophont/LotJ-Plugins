<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Thursday, December 22, 2016, 4:06 AM -->
<!-- MuClient version 4.94 -->

<!-- Plugin "LotJResearchScript" generated by Plugin Wizard -->

<!--
I hope that this helps.

If you need to see the commands, use rehelp.
-->

<muclient>
<plugin
   name="LotJResearchScript"
   author="@Ilyena"
   id="c0d03c92f50eef499bd9d2f7"
   language="Lua"
   purpose="To make researching and viewing practice lists easier."
   save_state="y"
   date_written="2016-12-22 04:05:00"
   requires="4.94"
   version="1.0"
   >
<description trim="y">
<![CDATA[
"rehelp" for help
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="ResearchBot"
   match="^You study for hours on end\, but fail to gather any knowledge\.$"
   regexp="y"
   script="beginResearch"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="ResearchBot"
   match="^You finish your studies and feel much more skilled\.$"
   regexp="y"
   script="beginResearch"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="ResearchQueue"
   match="------------------------------------Skills ------------------------------------"
   regexp="n"
   send_to="14"
   sequence="100"
  >
  <send>
EnableTriggerGroup("ResearchFind", true)
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="ResearchQueue"
   match="To see a shorter practice list, type PRACTICE <class name>."
   regexp="n"
   send_to="14"
   sequence="100"
  >
  <send>
EnableTriggerGroup("ResearchFind", false)
  </send>
  </trigger>
  <trigger
   enabled="y"
   group="ResearchBot"
   match="^Go learn it the hard way\, sissy\.$"
   regexp="y"
   script="finishedResearch"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="ResearchBot"
   match="^You can\'t learn more about that from books\.$"
   regexp="y"
   script="finishedResearch"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="ResearchBot"
   match="^You\'re not ready to learn that yet(.*)$"
   regexp="y"
   script="finishedResearch"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="ResearchBot"
   match="^You can\'t learn any more about that from books\!$"
   regexp="y"
   script="finishedResearch"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="ResearchBot"
   match="^You can\'t learn (.*) skills from a book\!$"
   regexp="y"
   script="finishedResearch"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="ResearchBot"
   match="^You can\'t learn about that in books\. Go find a teacher\.$"
   regexp="y"
   script="finishedResearch"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="ResearchFind"
   match="^[ ]{0,30}([a-zA-Z0-9_\- ]{3,30}?)[ ]{1,5}([0-9]{1,3})\%[ ]{0,50}([a-zA-Z0-9_\- ]{3,30}?)[\s]{1,5}([0-9]{1,3})\%[ ]{0,50}([a-zA-Z0-9_\- ]{3,30}?)[\s]{1,5}([0-9]{1,3})\%$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>colorOne = ""
colorTwo = ""
colorThree = ""

local low = tonumber(GetVariable("lowToMediumSkillPercentage"))
local medium = tonumber(GetVariable("mediumToHighSkillPercentage"))
local master = tonumber(GetVariable("masterSkillPercentage"))

local lowColor = GetVariable("lowSkillColor")
local mediumColor = GetVariable("mediumSkillColor")
local highColor = GetVariable("highSkillColor")
local masterColor = GetVariable("masterSkillColor")

if tonumber("%2") &lt;= low then
colorOne = lowColor
elseif tonumber("%2") &lt;= medium then
colorOne = mediumColor
elseif tonumber("%2") &lt; master then
colorOne = highColor
else
colorOne = masterColor
end

if tonumber("%4") &lt;= low then
colorTwo = lowColor
elseif tonumber("%4") &lt;= medium then
colorTwo = mediumColor
elseif tonumber("%4") &lt; master then
colorTwo = highColor
else
colorTwo = masterColor
end

if tonumber("%6") &lt;= low then
colorThree = lowColor
elseif tonumber("%6") &lt;= medium then
colorThree = mediumColor
elseif tonumber("%6") &lt; master then
colorThree = highColor
else
colorThree = masterColor
end

a = string.len("%1" .. "%2")
b = string.len("%3" .. "%4")

--ColourTell("black", "black", CreateSpacer(5,0,""))
ColourTell("white", "black", " [ ")
Hyperlink("readd %1", "%1 %2\%", "Add to Queue", colorOne, "black", false)
ColourTell("white", "black"," ]".. CreateSpacer(26-a, 0, "") .."[ ")
Hyperlink("readd %3", "%3 %4\%", "Add to Queue" ,colorTwo, "black", false)
ColourTell("white", "black"," ]".. CreateSpacer(26-b, 0, "") .."[ ")
Hyperlink("readd %5", "%5 %6\%", "Add to Queue" ,colorThree, "black", false)
ColourTell("white", "black"," ]")
Note("")</send>
  </trigger>
  <trigger
   enabled="y"
   group="ResearchFind"
   match="^[ ]{0,30}([a-zA-Z0-9_\- ]{3,30}?)[ ]{1,5}([0-9]{1,3})\%[ ]{0,50}([a-zA-Z0-9_\- ]{3,30}?)[\s]{1,5}([0-9]{1,3})\%[ ]{0,5}$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>local colorOne = ""
local colorTwo = ""

local low = tonumber(GetVariable("lowToMediumSkillPercentage"))
local medium = tonumber(GetVariable("mediumToHighSkillPercentage"))
local master = tonumber(GetVariable("masterSkillPercentage"))

local lowColor = GetVariable("lowSkillColor")
local mediumColor = GetVariable("mediumSkillColor")
local highColor = GetVariable("highSkillColor")
local masterColor = GetVariable("masterSkillColor")


if tonumber("%2") &lt;= low then
colorOne = lowColor
elseif tonumber("%2") &lt;= medium then
colorOne = mediumColor
elseif tonumber("%2") &lt; master then
colorOne = highColor
else
colorOne = masterColor
end

if tonumber("%4") &lt;= low then
colorTwo = lowColor
elseif tonumber("%4") &lt;= medium then
colorTwo = mediumColor
elseif tonumber("%4") &lt; master then
colorTwo = highColor
else
colorTwo = masterColor
end

a = string.len("%1" .. "%2")

ColourTell("white", "black", " [ ")
Hyperlink("readd %1", "%1 %2\%", "Add to Queue", colorOne, "black", false)
ColourTell("white", "black"," ]".. CreateSpacer(26-a, 0, "") .."[ ")
Hyperlink("readd %3", "%3 %4\%", "Add to Queue" ,colorTwo, "black", false)
ColourTell("white", "black", " ]")
Note("")</send>
  </trigger>
  <trigger
   enabled="y"
   group="ResearchFind"
   match="^[ ]{0,30}([a-zA-Z0-9_\- ]{3,30}?)[ ]{1,5}([0-9]{1,3})\%[ ]{0,5}$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>local colorOne = " "

local low = tonumber(GetVariable("lowToMediumSkillPercentage"))
local medium = tonumber(GetVariable("mediumToHighSkillPercentage"))
local master = tonumber(GetVariable("masterSkillPercentage"))

local lowColor = GetVariable("lowSkillColor")
local mediumColor = GetVariable("mediumSkillColor")
local highColor = GetVariable("highSkillColor")
local masterColor = GetVariable("masterSkillColor")


if tonumber("%2") &lt;= low then
colorOne = lowColor
elseif tonumber("%2") &lt;= medium then
colorOne = mediumColor
elseif tonumber("%2") &lt; master then
colorOne = highColor
else
colorOne = masterColor
end

ColourTell("white", "black", " [ ")
Hyperlink("readd %1", "%1 %2\%", "Add to Queue", colorOne, "black", false)
ColourTell("white", "black", " ]")
Note("")</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   match="relowcol *"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("lowSkillColor", "%1")
ColourNote(GetVariable("lowSkillColor"), "black", "New low skill color is ".. GetVariable("lowSkillColor").. ".")</send>
  </alias>
  <alias
   match="remedcol"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote(GetVariable("mediumSkillColor"), "black", "Current medium skill color is ".. GetVariable("mediumSkillColor").. ".")</send>
  </alias>
  <alias
   script="clearResearch"
   match="reclear"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="rehighcol"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote(GetVariable("highSkillColor"), "black", "Current high skill color is ".. GetVariable("highSkillColor").. ".")</send>
  </alias>
  <alias
   match="remedcol *"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("mediumSkillColor", "%1")
ColourNote(GetVariable("mediumSkillColor"), "black", "New medium skill color is ".. GetVariable("mediumSkillColor").. ".")</send>
  </alias>
  <alias
   match="^relowsk ([0-9]{1,3})$"
   enabled="y"
   group="ResearchColor"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("lowToMediumSkillPercentage", "%1")
ColourNote("white", "black", "New low skill percentage is now " .. %1)
</send>
  </alias>
  <alias
   match="relowcol"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote(GetVariable("lowSkillColor"), "black", "Current low skill color is ".. GetVariable("lowSkillColor").. ".")</send>
  </alias>
  <alias
   match="remstrcol"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote(GetVariable("masterSkillColor"), "black", "Current Master skill color is ".. GetVariable("masterSkillColor").. ".")</send>
  </alias>
  <alias
   script="researchHelp"
   match="rehelp"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="rereset"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("lowToMediumSkillPercentage", "33")
SetVariable("mediumToHighSkillPercentage", "66")
SetVariable("masterSkillPercentage", "100")
SetVariable("lowSkillColor", "red")
SetVariable("mediumSkillColor", "yellow")
SetVariable("highSkillColor", "green")
SetVariable("masterSkillColor", "white")
ColourNote("green", "black", "Research defaults loaded.")</send>
  </alias>
  <alias
   match="rehighcol *"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("highSkillColor", "%1")
ColourNote(GetVariable("highSkillColor"), "black", "New high skill color is ".. GetVariable("highSkillColor").. ".")</send>
  </alias>
  <alias
   match="remstrcol *"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("masterSkillColor", "%1")
ColourNote(GetVariable("masterSkillColor"), "black", "New Master skill color is ".. GetVariable("masterSkillColor").. ".")</send>
  </alias>
  <alias
   match="remedsk"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote("white", "black", "Medium skill percentage is " .. GetVariable("mediumToHighSkillPercentage"))
</send>
  </alias>
  <alias
   match="^remedsk ([0-9]{1,3})$"
   enabled="y"
   group="ResearchColor"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("mediumToHighSkillPercentage", "%1")
ColourNote("white", "black", "New medium skill percentage is now " .. %1)
</send>
  </alias>
  <alias
   match="rehighsk"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote("white", "black", "High skill percentage is " .. GetVariable("masterSkillPercentage"))</send>
  </alias>
  <alias
   match="relowsk"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote("white", "black", "Low skill percentage is " .. GetVariable("lowToMediumSkillPercentage"))</send>
  </alias>
  <alias
   match="^rehighsk ([0-9]{1,3})$"
   enabled="y"
   group="ResearchColor"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("masterSkillPercentage", "%1")
ColourNote("white", "black", "New high skill percentage is now " .. %1)
</send>
  </alias>
  <alias
   script="addToQueue"
   match="readd *"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="resettings"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  <send>Note("")
ColourTell("white", "black", "Current settings are: ")
ColourTell(GetVariable("masterSkillColor"), "black", "[ ")
ColourTell(GetVariable("lowSkillColor"), "black", GetVariable("lowToMediumSkillPercentage"))
ColourTell("white", "black", " | ")
ColourTell(GetVariable("mediumSkillColor"), "black", GetVariable("mediumToHighSkillPercentage"))
ColourTell("white", "black", " | ")
ColourTell(GetVariable("highSkillColor"), "black", GetVariable("masterSkillPercentage"))
ColourTell(GetVariable("masterSkillColor"), "black", " ]")
Note("")</send>
  </alias>
  <alias
   script="beginResearch"
   match="research"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   script="removeFromList"
   match="rerem *"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   script="addToBeginningOfQueue"
   match="research *"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   script="showResearchList"
   match="reshow"
   enabled="y"
   group="ResearchColor"
   send_to="12"
   sequence="100"
  >
  </alias>
</aliases>

<!--  Variables  -->

<variables>
  <variable name="mediumSkillColor">yellow</variable>
  <variable name="mediumToHighSkillPercentage">66</variable>
  <variable name="masterSkillColor">darkgoldenrod</variable>
  <variable name="lowToMediumSkillPercentage">15</variable>
  <variable name="masterSkillPercentage">100</variable>
  <variable name="highSkillColor">green</variable>
  <variable name="lowSkillColor">red</variable>
</variables>

<!--  Script  -->


<script>
<![CDATA[
researchQueue = {} -- the research queue

function addToQueue(name, line, wildcards) -- Place a at the back of the table
t = #researchQueue -- Find the size of the research queue
	if (t == 0) then
		table.insert(researchQueue, 1, wildcards[1]) -- Make first entry
	else
		table.insert(researchQueue, wildcards[1]) -- Make subsequent entries
	end --if
	Note(wildcards[1] .. " added to research queue.")
end -- function

function addToBeginningOfQueue(name, line, wildcards)
t = #researchQueue -- Find the size of the research queue.
	if (t == 0) then
		addToQueue(name, line, wildcards)
	else
		table.insert(researchQueue, 1, wildcards[1])
		ColourNote("green", "black", wildcards[1] .. " added to the beginning of the queue.")
	end -- if
	beginResearch()
end -- function

function removeFromList(name, line, wildcards)
	if #researchQueue > 0 then
		if findInList(wildcards[1]) > -1 then
			table.remove(researchQueue, findInList(wildcards[1]))
			Note("Removed " .. wildcards[1] .. " from study list.")
		else
			ColourNote("red", "black", "Did not find ".. wildcards[1] .. " in list.")
		end -- if
	else
		ColourNote("red", "black", "Research queue is empty.")
	end -- if
end -- function

function beginResearch(name, line, wildcards)
	if #researchQueue > 0 then
		Send("research ".. researchQueue[1])	
	else
		ColourNote("red", "black", "Research queue is empty.")
	end -- if
end -- function

function clearResearch(name, line, wildcards)
	if (#researchQueue > 0) then
		researchQueue = {}
		Note("Research queue cleared.")
	else
		Note("Research queue already empty.")
	end -- if
end -- function

function finishedResearch(name, line, wildcards)
	if #researchQueue > 0 then
		table.remove(researchQueue, 1)
		beginResearch(name, line, wildcards)
	end -- if
end -- function

function showResearchList(name, line, wildcards)
ColourNote("white", "black", "Current research queue:")
	if loopAndPrintList(#researchQueue, 1, researchQueue) == 0 then
		ColourNote("white", "black", "Queue is empty.")
	end -- if
end -- function

function loopAndPrintList(t, n, r)
	if (n <= t) then
		ColourTell("white", "black", "[ ")
		Hyperlink("rerem " .. r[n], r[n], "Remove " .. r[n].." from queue.", "orange", "black", false)
		ColourTell("white", "black", " ]")
		Note("")
		loopAndPrintList(t, n+1, r)
	elseif (t == 0) then
	return 0
	end -- if
return 1
end -- function

function findInList(s)
t = #researchQueue -- Length of the list
for i, v in ipairs(researchQueue) do
		if (v == s) then
			return i
		else
			if (t == i) then -- if you have gone through the list
				return -1
			end -- if
		end -- if
	end -- for
end -- function

function CreateSpacer(n, i, s)
	if i < n then
		a = s .. " "
		return CreateSpacer(n, i+1, a)
	else
		return s
	end -- if
	return s
end -- function

function researchHelp(name, line, wildcards)
	Note("")
	Note("Research Script by @Ilyena")
	Note("--------------------------")
	Note("This is an interactive script. You will be able to click")
	Note("on the skills in your practice list to add them to your")
	Note("queue. You can also click on them in your queue to remove")
	Note("them from it.")
	Note("")
	Note("research     - Begin researching your queue.")
	Note("readd #      - Add skill to your research queue.")
	Note("rerem #      - Remove skill from your research queue.")
	Note("reshow       - Display your research queue.")
	Note("relowsk (#)  - Set the upper bound low skill category.")
	Note("remedsk (#)  - Set the upper bound mid skill category.")
	Note("rehighsk (#) - Set the upper bound high skill category.")
	Note("relowcol (#) - Set the color for the low skills.")
	Note("remedcol (#) - Set the color for the mid skills.")
	Note("rehighcol (#)- Set the color for the high skills.")
	Note("remstrcol (#)- Set the color for the mastered skills.")
	Note("rereset      - Resets the colors and values to default.")
	Note("resettings   - Show the current settings.")
	Note("")
	Note("Ensure that the numbers and colors for the categories")
	Note("are valid. Defaults can be seen by typing the command")
	Note("with no arguments.")
end -- function

]]>
</script>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="LotJResearchScript:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>
